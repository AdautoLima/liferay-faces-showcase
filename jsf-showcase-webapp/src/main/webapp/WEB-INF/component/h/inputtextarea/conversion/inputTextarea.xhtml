<ui:composition xmlns="http://www.w3.org/1999/xhtml" xmlns:alloy="http://liferay.com/faces/alloy"
	xmlns:f="http://java.sun.com/jsf/core" xmlns:h="http://java.sun.com/jsf/html"
	xmlns:ui="http://java.sun.com/jsf/facelets" xmlns:showcase="http://java.sun.com/jsf/composite/showcase"
	template="/WEB-INF/templates/component-2col.xhtml">

	<ui:define name="col1">
		<!-- Example 1: Conversion to a Date using the converter attribute. -->
		<h:form>
			<showcase:example description="#{i18n['conversion-to-a-date-using-converter-attribute']}" number="1">
				<alloy:field>
					<h:inputTextarea id="textarea" converter="javax.faces.DateTime"
						converterMessage="#{i18n['converter-message']}"
						value="#{inputTextModelBean.date}" />
					<br />
					<h:message for="textarea" />
				</alloy:field>
				<hr />
				<h:commandButton action="#{inputTextBackingBean.submit}" value="#{i18n['submit']}">
					<f:ajax execute="@form" render="@form" />
				</h:commandButton>
			</showcase:example>
			<showcase:outputModel>
				<h:outputText id="modelValue" converter="javax.faces.DateTime" value="#{inputTextModelBean.date}" />
			</showcase:outputModel>
		</h:form>
	</ui:define>

	<ui:define name="col2">
		<!-- Example 2: Conversion to a Date using an f:converter child tag. -->
		<h:form>
			<showcase:example description="#{i18n['conversion-to-a-date-using-f-convertdatetime']}" number="2">
				<alloy:field>
					<h:inputTextarea id="textarea" converterMessage="#{i18n['converter-message']}"
						value="#{inputTextModelBean.date}">
						<f:convertDateTime pattern="MM/dd/yyyy" />
					</h:inputTextarea>
					<br />
					<h:message for="textarea" />
				</alloy:field>
				<hr />
				<h:commandButton action="#{inputTextBackingBean.submit}" value="#{i18n['submit']}">
					<f:ajax execute="@form" render="@form" />
				</h:commandButton>
			</showcase:example>
			<showcase:outputModel>
				<h:outputText id="modelValue" value="#{inputTextModelBean.date}">
					<f:convertDateTime pattern="MM/dd/yyyy" />
				</h:outputText>
			</showcase:outputModel>
		</h:form>
	</ui:define>

</ui:composition>
