<ui:composition xmlns="http://www.w3.org/1999/xhtml" xmlns:bootstrap="http://java.sun.com/jsf/composite/bootstrap"
	xmlns:f="http://java.sun.com/jsf/core"  xmlns:h="http://java.sun.com/jsf/html"
	xmlns:ui="http://java.sun.com/jsf/facelets" xmlns:showcase="http://java.sun.com/jsf/composite/showcase"
	template="/WEB-INF/templates/component-2col.xhtml">

	<ui:define name="col1">
		<h:form id="myForm1">
			<!-- Example 1: Validating an email address using the validator attribute. -->
			<showcase:example description="#{i18n['validating-an-email-address-using-validator-attribute']}" number="1">
				<bootstrap:field label="#{i18n['password']}">
					<h:inputSecret id="text" validator="#{inputSecretBackingBean.emailAddressValidator}"
						validatorMessage="#{i18n['validator-message']}" value="#{inputSecretModelBean.password}" />
					<h:message for="text" />
				</bootstrap:field>
				<hr />
				<h:commandButton action="#{inputSecretBackingBean.submit}" value="#{i18n['submit']}">
					<f:ajax execute="@form" render="@form" />
				</h:commandButton>
			</showcase:example>
			<showcase:outputModel id="outputModel">
				<h:outputText id="modelValue" value="#{inputSecretModelBean.password}" />
			</showcase:outputModel>
		</h:form>
	</ui:define>

	<ui:define name="col2">
		<!-- Example 2: Validating an email address using an f:validateRegex child tag. -->
		<h:form id="myForm2">
			<showcase:example description="#{i18n['validating-an-email-address-using-f-validateregex']}" number="2">
				<bootstrap:field label="#{i18n['password']}">
					<h:inputSecret id="text" validatorMessage="#{i18n['validator-message']}"
						value="#{inputSecretModelBean.password}">
						<f:validateRegex pattern=".+[@].+[.].+" />
					</h:inputSecret>
					<h:message for="text" />
				</bootstrap:field>
				<hr />
				<h:commandButton action="#{inputSecretBackingBean.submit}" value="#{i18n['submit']}">
					<f:ajax execute="@form" render="@form" />
				</h:commandButton>
			</showcase:example>
			<showcase:outputModel id="outputModel">
				<h:outputText id="modelValue" value="#{inputSecretModelBean.password}" />
			</showcase:outputModel>
		</h:form>
	</ui:define>

</ui:composition>
