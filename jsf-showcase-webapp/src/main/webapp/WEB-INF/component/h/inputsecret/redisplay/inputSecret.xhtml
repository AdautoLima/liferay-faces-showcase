<ui:composition xmlns="http://www.w3.org/1999/xhtml"
	xmlns:f="http://java.sun.com/jsf/core"  xmlns:h="http://java.sun.com/jsf/html"
	xmlns:ui="http://java.sun.com/jsf/facelets" xmlns:showcase="http://liferay.com/faces/showcase"
	template="/WEB-INF/templates/component-2col.xhtml">

	<ui:define name="col1">
		<!-- Example 1: Specifying redisplay=false (the default, which is secure) -->
		<h:form id="myForm1">
			<showcase:example description="#{i18n['h-inputsecret-redisplay-example-1']}" number="1">
				<h:messages id="globalMessages" globalOnly="true" layout="table" />
				<showcase:field label="#{i18n['password']}">
					<h:inputSecret id="secret1" value="#{inputSecretModelBean.password}" />
					<h:message id="messageSecret1" for="secret1" />
				</showcase:field>
				<hr />
				<h:commandButton action="#{inputSecretBackingBean.submit1}" value="#{i18n['submit']}">
					<f:ajax execute="@form" render=":myForm1:outputModel:modelValue messageSecret1 globalMessages" />
				</h:commandButton>
			</showcase:example>
			<showcase:results label="#{i18n['model-value']}" id="outputModel">
				<h:outputText id="modelValue" value="#{inputSecretModelBean.password}" />
			</showcase:results>
		</h:form>
	</ui:define>

	<ui:define name="col2">
		<!-- Example 2: Specifying redisplay=true (potential security risk) -->
		<h:form>
			<showcase:example description="#{i18n['h-inputsecret-redisplay-example-2']}" number="2">
				<h:messages globalOnly="true" layout="table" />
				<showcase:field label="#{i18n['password']}">
					<h:inputSecret id="secret2" redisplay="true" value="#{inputSecretModelBean.password}" />
					<h:message id="myMessage" for="secret2" />
				</showcase:field>
				<hr />
				<h:commandButton action="#{inputSecretBackingBean.submit2}"	value="#{i18n['submit']}">
					<f:ajax execute="@form" render="@form" />
				</h:commandButton>
			</showcase:example>
			<showcase:results label="#{i18n['model-value']}">
				<h:outputText id="modelValue" value="#{inputSecretModelBean.password}" />
			</showcase:results>
		</h:form>
	</ui:define>

</ui:composition>
